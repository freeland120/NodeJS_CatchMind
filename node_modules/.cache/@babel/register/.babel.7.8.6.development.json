{
  "{\"sourceRoot\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\",\"filename\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind",
      "filename": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src\\server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _path = require(\"path\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _socket = _interopRequireDefault(require(\"socket.io\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _socketController = _interopRequireDefault(require(\"./socketController\"));\n\nvar _events = _interopRequireDefault(require(\"./events\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar PORT = 4000;\nvar app = (0, _express[\"default\"])();\napp.set(\"view engine\", \"pug\");\napp.set(\"views\", (0, _path.join)(__dirname, \"views\"));\napp.use((0, _morgan[\"default\"])(\"dev\"));\napp.use(_express[\"default\"][\"static\"]((0, _path.join)(__dirname, \"static\")));\napp.get(\"/\", function (req, res) {\n  return res.render(\"home\", {\n    events: JSON.stringify(_events[\"default\"])\n  });\n});\n\nvar serverListening = function serverListening() {\n  return console.log(\"\\u2705 Server running: http://localhost:\".concat(PORT));\n}; //socketIO에 전달해주기 위해서 server라는 변수를 만듬\n\n\nvar server = app.listen(PORT, serverListening);\n\nvar io = _socket[\"default\"].listen(server); //socketIO가 express server를 붙잡고 있음\n//io 라는 변수를 만든이유는 io가 모든 이벤트를 알아야 하기 때문\n\n\nio.on(\"connection\", function (socket) {\n  return (0, _socketController[\"default\"])(socket, io);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJQT1JUIiwiYXBwIiwic2V0IiwiX19kaXJuYW1lIiwidXNlIiwiZXhwcmVzcyIsImdldCIsInJlcSIsInJlcyIsInJlbmRlciIsImV2ZW50cyIsIkpTT04iLCJzdHJpbmdpZnkiLCJzZXJ2ZXJMaXN0ZW5pbmciLCJjb25zb2xlIiwibG9nIiwic2VydmVyIiwibGlzdGVuIiwiaW8iLCJzb2NrZXRJTyIsIm9uIiwic29ja2V0Il0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsSUFBSSxHQUFHLElBQWI7QUFDQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVo7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsYUFBUixFQUF1QixLQUF2QjtBQUNBRCxHQUFHLENBQUNDLEdBQUosQ0FBUSxPQUFSLEVBQWlCLGdCQUFLQyxTQUFMLEVBQWdCLE9BQWhCLENBQWpCO0FBQ0FGLEdBQUcsQ0FBQ0csR0FBSixDQUFRLHdCQUFPLEtBQVAsQ0FBUjtBQUNBSCxHQUFHLENBQUNHLEdBQUosQ0FBUUMsOEJBQWUsZ0JBQUtGLFNBQUwsRUFBZ0IsUUFBaEIsQ0FBZixDQUFSO0FBRUFGLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFDQyxHQUFELEVBQU1DLEdBQU47QUFBQSxTQUNYQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxNQUFYLEVBQW1CO0FBQUVDLElBQUFBLE1BQU0sRUFBRUMsSUFBSSxDQUFDQyxTQUFMLENBQWVGLGtCQUFmO0FBQVYsR0FBbkIsQ0FEVztBQUFBLENBQWI7O0FBSUEsSUFBTUcsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQjtBQUFBLFNBQ3RCQyxPQUFPLENBQUNDLEdBQVIsbURBQWtEZixJQUFsRCxFQURzQjtBQUFBLENBQXhCLEMsQ0FHQTs7O0FBQ0EsSUFBTWdCLE1BQU0sR0FBR2YsR0FBRyxDQUFDZ0IsTUFBSixDQUFXakIsSUFBWCxFQUFpQmEsZUFBakIsQ0FBZjs7QUFFQSxJQUFNSyxFQUFFLEdBQUdDLG1CQUFTRixNQUFULENBQWdCRCxNQUFoQixDQUFYLEMsQ0FBb0M7QUFDcEM7OztBQUVBRSxFQUFFLENBQUNFLEVBQUgsQ0FBTSxZQUFOLEVBQW9CLFVBQUFDLE1BQU07QUFBQSxTQUFJLGtDQUFpQkEsTUFBakIsRUFBeUJILEVBQXpCLENBQUo7QUFBQSxDQUExQiIsInNvdXJjZVJvb3QiOiJDOlxcQ29kaW5nX0xlY3R1cmVcXE5vbWFkQ29kZXJcXE5vZGVKU19DYXRjaE1pbmRcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpvaW4gfSBmcm9tIFwicGF0aFwiO1xyXG5pbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgc29ja2V0SU8gZnJvbSBcInNvY2tldC5pb1wiO1xyXG5pbXBvcnQgbG9nZ2VyIGZyb20gXCJtb3JnYW5cIjtcclxuaW1wb3J0IHNvY2tldENvbnRyb2xsZXIgZnJvbSBcIi4vc29ja2V0Q29udHJvbGxlclwiO1xyXG5pbXBvcnQgZXZlbnRzIGZyb20gXCIuL2V2ZW50c1wiO1xyXG5cclxuY29uc3QgUE9SVCA9IDQwMDA7XHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuXHJcbmFwcC5zZXQoXCJ2aWV3IGVuZ2luZVwiLCBcInB1Z1wiKTtcclxuYXBwLnNldChcInZpZXdzXCIsIGpvaW4oX19kaXJuYW1lLCBcInZpZXdzXCIpKTtcclxuYXBwLnVzZShsb2dnZXIoXCJkZXZcIikpO1xyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKGpvaW4oX19kaXJuYW1lLCBcInN0YXRpY1wiKSkpO1xyXG5cclxuYXBwLmdldChcIi9cIiwgKHJlcSwgcmVzKSA9PlxyXG4gIHJlcy5yZW5kZXIoXCJob21lXCIsIHsgZXZlbnRzOiBKU09OLnN0cmluZ2lmeShldmVudHMpIH0pXHJcbik7XHJcblxyXG5jb25zdCBzZXJ2ZXJMaXN0ZW5pbmcgPSAoKSA9PlxyXG4gIGNvbnNvbGUubG9nKGDinIUgU2VydmVyIHJ1bm5pbmc6IGh0dHA6Ly9sb2NhbGhvc3Q6JHtQT1JUfWApO1xyXG5cclxuLy9zb2NrZXRJT+yXkCDsoITri6ztlbTso7zquLAg7JyE7ZW07IScIHNlcnZlcuudvOuKlCDrs4DsiJjrpbwg66eM65OsXHJcbmNvbnN0IHNlcnZlciA9IGFwcC5saXN0ZW4oUE9SVCwgc2VydmVyTGlzdGVuaW5nKTtcclxuXHJcbmNvbnN0IGlvID0gc29ja2V0SU8ubGlzdGVuKHNlcnZlcik7IC8vc29ja2V0SU/qsIAgZXhwcmVzcyBzZXJ2ZXLrpbwg67aZ7J6h6rOgIOyeiOydjFxyXG4vL2lvIOudvOuKlCDrs4DsiJjrpbwg66eM65Og7J207Jyg64qUIGlv6rCAIOuqqOuToCDsnbTrsqTtirjrpbwg7JWM7JWE7JW8IO2VmOq4sCDrlYzrrLhcclxuXHJcbmlvLm9uKFwiY29ubmVjdGlvblwiLCBzb2NrZXQgPT4gc29ja2V0Q29udHJvbGxlcihzb2NrZXQsIGlvKSk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "PORT",
        "app",
        "set",
        "__dirname",
        "use",
        "express",
        "get",
        "req",
        "res",
        "render",
        "events",
        "JSON",
        "stringify",
        "serverListening",
        "console",
        "log",
        "server",
        "listen",
        "io",
        "socketIO",
        "on",
        "socket"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,IAAI,GAAG,IAAb;AACA,IAAMC,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiB,gBAAKC,SAAL,EAAgB,OAAhB,CAAjB;AACAF,GAAG,CAACG,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAH,GAAG,CAACG,GAAJ,CAAQC,8BAAe,gBAAKF,SAAL,EAAgB,QAAhB,CAAf,CAAR;AAEAF,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SACXA,GAAG,CAACC,MAAJ,CAAW,MAAX,EAAmB;AAAEC,IAAAA,MAAM,EAAEC,IAAI,CAACC,SAAL,CAAeF,kBAAf;AAAV,GAAnB,CADW;AAAA,CAAb;;AAIA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SACtBC,OAAO,CAACC,GAAR,mDAAkDf,IAAlD,EADsB;AAAA,CAAxB,C,CAGA;;;AACA,IAAMgB,MAAM,GAAGf,GAAG,CAACgB,MAAJ,CAAWjB,IAAX,EAAiBa,eAAjB,CAAf;;AAEA,IAAMK,EAAE,GAAGC,mBAASF,MAAT,CAAgBD,MAAhB,CAAX,C,CAAoC;AACpC;;;AAEAE,EAAE,CAACE,EAAH,CAAM,YAAN,EAAoB,UAAAC,MAAM;AAAA,SAAI,kCAAiBA,MAAjB,EAAyBH,EAAzB,CAAJ;AAAA,CAA1B",
      "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src",
      "sourcesContent": [
        "import { join } from \"path\";\r\nimport express from \"express\";\r\nimport socketIO from \"socket.io\";\r\nimport logger from \"morgan\";\r\nimport socketController from \"./socketController\";\r\nimport events from \"./events\";\r\n\r\nconst PORT = 4000;\r\nconst app = express();\r\n\r\napp.set(\"view engine\", \"pug\");\r\napp.set(\"views\", join(__dirname, \"views\"));\r\napp.use(logger(\"dev\"));\r\napp.use(express.static(join(__dirname, \"static\")));\r\n\r\napp.get(\"/\", (req, res) =>\r\n  res.render(\"home\", { events: JSON.stringify(events) })\r\n);\r\n\r\nconst serverListening = () =>\r\n  console.log(`✅ Server running: http://localhost:${PORT}`);\r\n\r\n//socketIO에 전달해주기 위해서 server라는 변수를 만듬\r\nconst server = app.listen(PORT, serverListening);\r\n\r\nconst io = socketIO.listen(server); //socketIO가 express server를 붙잡고 있음\r\n//io 라는 변수를 만든이유는 io가 모든 이벤트를 알아야 하기 때문\r\n\r\nio.on(\"connection\", socket => socketController(socket, io));\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583139348682
  },
  "{\"sourceRoot\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\",\"filename\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind",
      "filename": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.build = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpCsso = _interopRequireDefault(require(\"gulp-csso\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpBrowserify = _interopRequireDefault(require(\"gulp-browserify\"));\n\nvar _babelify = _interopRequireDefault(require(\"babelify\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_gulpSass[\"default\"].compiler = require(\"node-sass\");\nvar paths = {\n  styles: {\n    src: \"assets/scss/styles.scss\",\n    dest: \"src/static/styles\",\n    watch: \"assets/scss/**/*.scss\"\n  },\n  js: {\n    src: \"assets/js/main.js\",\n    dest: \"src/static/js\",\n    watch: \"assets/js/**/*.js\"\n  }\n};\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])([\"src/static\"]);\n};\n\nvar styles = function styles() {\n  return _gulp[\"default\"].src(paths.styles.src).pipe((0, _gulpSass[\"default\"])()).pipe((0, _gulpAutoprefixer[\"default\"])({\n    overrideBrowserslists: [\"last 2 versions\"],\n    cascade: false\n  })).pipe((0, _gulpCsso[\"default\"])()).pipe(_gulp[\"default\"].dest(paths.styles.dest));\n};\n\nvar js = function js() {\n  return _gulp[\"default\"].src(paths.js.src).pipe((0, _gulpBrowserify[\"default\"])({\n    transform: [_babelify[\"default\"].configure({\n      presets: [\"@babel/preset-env\"]\n    })]\n  })).pipe(_gulp[\"default\"].dest(paths.js.dest));\n};\n\nvar watchFiles = function watchFiles() {\n  _gulp[\"default\"].watch(paths.styles.watch, styles);\n\n  _gulp[\"default\"].watch(paths.js.watch, js);\n};\n\nvar dev = _gulp[\"default\"].series(clean, styles, js, watchFiles);\n\nvar build = _gulp[\"default\"].series(clean, styles, js);\n\nexports.build = build;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNhc3MiLCJjb21waWxlciIsInJlcXVpcmUiLCJwYXRocyIsInN0eWxlcyIsInNyYyIsImRlc3QiLCJ3YXRjaCIsImpzIiwiY2xlYW4iLCJndWxwIiwicGlwZSIsIm92ZXJyaWRlQnJvd3NlcnNsaXN0cyIsImNhc2NhZGUiLCJ0cmFuc2Zvcm0iLCJiYWJlbCIsImNvbmZpZ3VyZSIsInByZXNldHMiLCJ3YXRjaEZpbGVzIiwiZGV2Iiwic2VyaWVzIiwiYnVpbGQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBQSxxQkFBS0MsUUFBTCxHQUFnQkMsT0FBTyxDQUFDLFdBQUQsQ0FBdkI7QUFFQSxJQUFNQyxLQUFLLEdBQUc7QUFDWkMsRUFBQUEsTUFBTSxFQUFFO0FBQ05DLElBQUFBLEdBQUcsRUFBRSx5QkFEQztBQUVOQyxJQUFBQSxJQUFJLEVBQUUsbUJBRkE7QUFHTkMsSUFBQUEsS0FBSyxFQUFFO0FBSEQsR0FESTtBQU1aQyxFQUFBQSxFQUFFLEVBQUU7QUFDRkgsSUFBQUEsR0FBRyxFQUFFLG1CQURIO0FBRUZDLElBQUFBLElBQUksRUFBRSxlQUZKO0FBR0ZDLElBQUFBLEtBQUssRUFBRTtBQUhMO0FBTlEsQ0FBZDs7QUFZQSxJQUFNRSxLQUFLLEdBQUcsU0FBUkEsS0FBUTtBQUFBLFNBQU0scUJBQUksQ0FBQyxZQUFELENBQUosQ0FBTjtBQUFBLENBQWQ7O0FBQ0EsSUFBTUwsTUFBTSxHQUFHLFNBQVRBLE1BQVM7QUFBQSxTQUNiTSxpQkFDR0wsR0FESCxDQUNPRixLQUFLLENBQUNDLE1BQU4sQ0FBYUMsR0FEcEIsRUFFR00sSUFGSCxDQUVRLDJCQUZSLEVBR0dBLElBSEgsQ0FJSSxrQ0FBYTtBQUNYQyxJQUFBQSxxQkFBcUIsRUFBRSxDQUFDLGlCQUFELENBRFo7QUFFWEMsSUFBQUEsT0FBTyxFQUFFO0FBRkUsR0FBYixDQUpKLEVBU0dGLElBVEgsQ0FTUSwyQkFUUixFQVVHQSxJQVZILENBVVFELGlCQUFLSixJQUFMLENBQVVILEtBQUssQ0FBQ0MsTUFBTixDQUFhRSxJQUF2QixDQVZSLENBRGE7QUFBQSxDQUFmOztBQVlBLElBQU1FLEVBQUUsR0FBRyxTQUFMQSxFQUFLO0FBQUEsU0FDVEUsaUJBQ0dMLEdBREgsQ0FDT0YsS0FBSyxDQUFDSyxFQUFOLENBQVNILEdBRGhCLEVBR0dNLElBSEgsQ0FJSSxnQ0FBSTtBQUNGRyxJQUFBQSxTQUFTLEVBQUUsQ0FDVEMscUJBQU1DLFNBQU4sQ0FBZ0I7QUFDZEMsTUFBQUEsT0FBTyxFQUFFLENBQUMsbUJBQUQ7QUFESyxLQUFoQixDQURTO0FBRFQsR0FBSixDQUpKLEVBWUdOLElBWkgsQ0FZUUQsaUJBQUtKLElBQUwsQ0FBVUgsS0FBSyxDQUFDSyxFQUFOLENBQVNGLElBQW5CLENBWlIsQ0FEUztBQUFBLENBQVg7O0FBZUEsSUFBTVksVUFBVSxHQUFHLFNBQWJBLFVBQWEsR0FBTTtBQUN2QlIsbUJBQUtILEtBQUwsQ0FBV0osS0FBSyxDQUFDQyxNQUFOLENBQWFHLEtBQXhCLEVBQStCSCxNQUEvQjs7QUFDQU0sbUJBQUtILEtBQUwsQ0FBV0osS0FBSyxDQUFDSyxFQUFOLENBQVNELEtBQXBCLEVBQTJCQyxFQUEzQjtBQUNELENBSEQ7O0FBS0EsSUFBTVcsR0FBRyxHQUFHVCxpQkFBS1UsTUFBTCxDQUFZWCxLQUFaLEVBQW1CTCxNQUFuQixFQUEyQkksRUFBM0IsRUFBK0JVLFVBQS9CLENBQVo7O0FBRU8sSUFBTUcsS0FBSyxHQUFHWCxpQkFBS1UsTUFBTCxDQUFZWCxLQUFaLEVBQW1CTCxNQUFuQixFQUEyQkksRUFBM0IsQ0FBZDs7O2VBRVFXLEciLCJzb3VyY2VSb290IjoiQzpcXENvZGluZ19MZWN0dXJlXFxOb21hZENvZGVyXFxOb2RlSlNfQ2F0Y2hNaW5kIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSBcImd1bHBcIjtcclxuaW1wb3J0IHNhc3MgZnJvbSBcImd1bHAtc2Fzc1wiO1xyXG5pbXBvcnQgYXV0b3ByZWZpeGVyIGZyb20gXCJndWxwLWF1dG9wcmVmaXhlclwiO1xyXG5pbXBvcnQgbWluaWZ5Q1NTIGZyb20gXCJndWxwLWNzc29cIjtcclxuaW1wb3J0IGRlbCBmcm9tIFwiZGVsXCI7XHJcbmltcG9ydCBicm8gZnJvbSBcImd1bHAtYnJvd3NlcmlmeVwiO1xyXG5pbXBvcnQgYmFiZWwgZnJvbSBcImJhYmVsaWZ5XCI7XHJcblxyXG5zYXNzLmNvbXBpbGVyID0gcmVxdWlyZShcIm5vZGUtc2Fzc1wiKTtcclxuXHJcbmNvbnN0IHBhdGhzID0ge1xyXG4gIHN0eWxlczoge1xyXG4gICAgc3JjOiBcImFzc2V0cy9zY3NzL3N0eWxlcy5zY3NzXCIsXHJcbiAgICBkZXN0OiBcInNyYy9zdGF0aWMvc3R5bGVzXCIsXHJcbiAgICB3YXRjaDogXCJhc3NldHMvc2Nzcy8qKi8qLnNjc3NcIlxyXG4gIH0sXHJcbiAganM6IHtcclxuICAgIHNyYzogXCJhc3NldHMvanMvbWFpbi5qc1wiLFxyXG4gICAgZGVzdDogXCJzcmMvc3RhdGljL2pzXCIsXHJcbiAgICB3YXRjaDogXCJhc3NldHMvanMvKiovKi5qc1wiXHJcbiAgfVxyXG59O1xyXG5jb25zdCBjbGVhbiA9ICgpID0+IGRlbChbXCJzcmMvc3RhdGljXCJdKTtcclxuY29uc3Qgc3R5bGVzID0gKCkgPT5cclxuICBndWxwXHJcbiAgICAuc3JjKHBhdGhzLnN0eWxlcy5zcmMpXHJcbiAgICAucGlwZShzYXNzKCkpXHJcbiAgICAucGlwZShcclxuICAgICAgYXV0b3ByZWZpeGVyKHtcclxuICAgICAgICBvdmVycmlkZUJyb3dzZXJzbGlzdHM6IFtcImxhc3QgMiB2ZXJzaW9uc1wiXSxcclxuICAgICAgICBjYXNjYWRlOiBmYWxzZVxyXG4gICAgICB9KVxyXG4gICAgKVxyXG4gICAgLnBpcGUobWluaWZ5Q1NTKCkpXHJcbiAgICAucGlwZShndWxwLmRlc3QocGF0aHMuc3R5bGVzLmRlc3QpKTtcclxuY29uc3QganMgPSAoKSA9PlxyXG4gIGd1bHBcclxuICAgIC5zcmMocGF0aHMuanMuc3JjKVxyXG5cclxuICAgIC5waXBlKFxyXG4gICAgICBicm8oe1xyXG4gICAgICAgIHRyYW5zZm9ybTogW1xyXG4gICAgICAgICAgYmFiZWwuY29uZmlndXJlKHtcclxuICAgICAgICAgICAgcHJlc2V0czogW1wiQGJhYmVsL3ByZXNldC1lbnZcIl1cclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgXVxyXG4gICAgICB9KVxyXG4gICAgKVxyXG4gICAgLnBpcGUoZ3VscC5kZXN0KHBhdGhzLmpzLmRlc3QpKTtcclxuXHJcbmNvbnN0IHdhdGNoRmlsZXMgPSAoKSA9PiB7XHJcbiAgZ3VscC53YXRjaChwYXRocy5zdHlsZXMud2F0Y2gsIHN0eWxlcyk7XHJcbiAgZ3VscC53YXRjaChwYXRocy5qcy53YXRjaCwganMpO1xyXG59O1xyXG5cclxuY29uc3QgZGV2ID0gZ3VscC5zZXJpZXMoY2xlYW4sIHN0eWxlcywganMsIHdhdGNoRmlsZXMpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJ1aWxkID0gZ3VscC5zZXJpZXMoY2xlYW4sIHN0eWxlcywganMpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZGV2O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "compiler",
        "require",
        "paths",
        "styles",
        "src",
        "dest",
        "watch",
        "js",
        "clean",
        "gulp",
        "pipe",
        "overrideBrowserslists",
        "cascade",
        "transform",
        "babel",
        "configure",
        "presets",
        "watchFiles",
        "dev",
        "series",
        "build"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,qBAAKC,QAAL,GAAgBC,OAAO,CAAC,WAAD,CAAvB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAE,yBADC;AAENC,IAAAA,IAAI,EAAE,mBAFA;AAGNC,IAAAA,KAAK,EAAE;AAHD,GADI;AAMZC,EAAAA,EAAE,EAAE;AACFH,IAAAA,GAAG,EAAE,mBADH;AAEFC,IAAAA,IAAI,EAAE,eAFJ;AAGFC,IAAAA,KAAK,EAAE;AAHL;AANQ,CAAd;;AAYA,IAAME,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,qBAAI,CAAC,YAAD,CAAJ,CAAN;AAAA,CAAd;;AACA,IAAML,MAAM,GAAG,SAATA,MAAS;AAAA,SACbM,iBACGL,GADH,CACOF,KAAK,CAACC,MAAN,CAAaC,GADpB,EAEGM,IAFH,CAEQ,2BAFR,EAGGA,IAHH,CAII,kCAAa;AACXC,IAAAA,qBAAqB,EAAE,CAAC,iBAAD,CADZ;AAEXC,IAAAA,OAAO,EAAE;AAFE,GAAb,CAJJ,EASGF,IATH,CASQ,2BATR,EAUGA,IAVH,CAUQD,iBAAKJ,IAAL,CAAUH,KAAK,CAACC,MAAN,CAAaE,IAAvB,CAVR,CADa;AAAA,CAAf;;AAYA,IAAME,EAAE,GAAG,SAALA,EAAK;AAAA,SACTE,iBACGL,GADH,CACOF,KAAK,CAACK,EAAN,CAASH,GADhB,EAGGM,IAHH,CAII,gCAAI;AACFG,IAAAA,SAAS,EAAE,CACTC,qBAAMC,SAAN,CAAgB;AACdC,MAAAA,OAAO,EAAE,CAAC,mBAAD;AADK,KAAhB,CADS;AADT,GAAJ,CAJJ,EAYGN,IAZH,CAYQD,iBAAKJ,IAAL,CAAUH,KAAK,CAACK,EAAN,CAASF,IAAnB,CAZR,CADS;AAAA,CAAX;;AAeA,IAAMY,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBR,mBAAKH,KAAL,CAAWJ,KAAK,CAACC,MAAN,CAAaG,KAAxB,EAA+BH,MAA/B;;AACAM,mBAAKH,KAAL,CAAWJ,KAAK,CAACK,EAAN,CAASD,KAApB,EAA2BC,EAA3B;AACD,CAHD;;AAKA,IAAMW,GAAG,GAAGT,iBAAKU,MAAL,CAAYX,KAAZ,EAAmBL,MAAnB,EAA2BI,EAA3B,EAA+BU,UAA/B,CAAZ;;AAEO,IAAMG,KAAK,GAAGX,iBAAKU,MAAL,CAAYX,KAAZ,EAAmBL,MAAnB,EAA2BI,EAA3B,CAAd;;;eAEQW,G",
      "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind",
      "sourcesContent": [
        "import gulp from \"gulp\";\r\nimport sass from \"gulp-sass\";\r\nimport autoprefixer from \"gulp-autoprefixer\";\r\nimport minifyCSS from \"gulp-csso\";\r\nimport del from \"del\";\r\nimport bro from \"gulp-browserify\";\r\nimport babel from \"babelify\";\r\n\r\nsass.compiler = require(\"node-sass\");\r\n\r\nconst paths = {\r\n  styles: {\r\n    src: \"assets/scss/styles.scss\",\r\n    dest: \"src/static/styles\",\r\n    watch: \"assets/scss/**/*.scss\"\r\n  },\r\n  js: {\r\n    src: \"assets/js/main.js\",\r\n    dest: \"src/static/js\",\r\n    watch: \"assets/js/**/*.js\"\r\n  }\r\n};\r\nconst clean = () => del([\"src/static\"]);\r\nconst styles = () =>\r\n  gulp\r\n    .src(paths.styles.src)\r\n    .pipe(sass())\r\n    .pipe(\r\n      autoprefixer({\r\n        overrideBrowserslists: [\"last 2 versions\"],\r\n        cascade: false\r\n      })\r\n    )\r\n    .pipe(minifyCSS())\r\n    .pipe(gulp.dest(paths.styles.dest));\r\nconst js = () =>\r\n  gulp\r\n    .src(paths.js.src)\r\n\r\n    .pipe(\r\n      bro({\r\n        transform: [\r\n          babel.configure({\r\n            presets: [\"@babel/preset-env\"]\r\n          })\r\n        ]\r\n      })\r\n    )\r\n    .pipe(gulp.dest(paths.js.dest));\r\n\r\nconst watchFiles = () => {\r\n  gulp.watch(paths.styles.watch, styles);\r\n  gulp.watch(paths.js.watch, js);\r\n};\r\n\r\nconst dev = gulp.series(clean, styles, js, watchFiles);\r\n\r\nexport const build = gulp.series(clean, styles, js);\r\n\r\nexport default dev;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583131401952
  },
  "{\"sourceRoot\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\",\"filename\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\\\\src\\\\socketController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind",
      "filename": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src\\socketController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src\\socketController.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src\\socketController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src",
        "sourceFileName": "socketController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _events = _interopRequireDefault(require(\"./events\"));\n\nvar _words = require(\"./words\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar sockets = [];\nvar inProgress = false;\nvar word = null;\nvar leader = null;\n\nvar chooseLeader = function chooseLeader() {\n  return sockets[Math.floor(Math.random() * sockets.length)];\n};\n\nvar socketController = function socketController(socket, io) {\n  var broadcast = function broadcast(event, data) {\n    return socket.broadcast.emit(event, data);\n  };\n\n  var superBroadcast = function superBroadcast(event, data) {\n    return io.emit(event, data);\n  };\n\n  var sendPlayerUpdate = function sendPlayerUpdate() {\n    return superBroadcast(_events[\"default\"].playerUpdate, {\n      sockets: sockets\n    });\n  };\n\n  var startGame = function startGame() {\n    if (inProgress === false) {\n      inProgress = true;\n      leader = chooseLeader();\n      word = (0, _words.chooseWord)();\n      superBroadcast(_events[\"default\"].gameStarting);\n      setTimeout(function () {\n        superBroadcast(_events[\"default\"].gameStarted);\n        io.to(leader.id).emit(_events[\"default\"].leaderNotif, {\n          word: word\n        });\n      }, 5000);\n    }\n  };\n\n  var endGame = function endGame() {\n    inProgress = false;\n    superBroadcast(_events[\"default\"].gameEnded);\n  };\n\n  var addPoints = function addPoints(id) {\n    sockets = sockets.map(function (socket) {\n      if (socket.id === id) {\n        socket.points += 10;\n      }\n\n      return socket;\n    });\n    sendPlayerUpdate();\n    endGame();\n  };\n\n  socket.on(_events[\"default\"].setNickname, function (_ref) {\n    var nickname = _ref.nickname;\n    socket.nickname = nickname;\n    sockets.push({\n      id: socket.id,\n      points: 0,\n      nickname: nickname\n    });\n    broadcast(_events[\"default\"].newUser, {\n      nickname: nickname\n    });\n    sendPlayerUpdate();\n\n    if (sockets.length === 2) {\n      startGame();\n    }\n  });\n  socket.on(_events[\"default\"].disconnect, function () {\n    sockets = sockets.filter(function (aSocket) {\n      return aSocket.id !== socket.id;\n    });\n\n    if (sockets.length === 1) {\n      endGame();\n    } else if (leader) {\n      if (leader.id === socket.id) {\n        endGame();\n      }\n    }\n\n    broadcast(_events[\"default\"].disconnected, {\n      nickname: socket.nickname\n    });\n    sendPlayerUpdate();\n  });\n  socket.on(_events[\"default\"].sendMsg, function (_ref2) {\n    var message = _ref2.message;\n\n    if (message === word) {\n      superBroadcast(_events[\"default\"].newMsg, {\n        message: \"Winner is \".concat(socket.nickname, \", word was: \").concat(word),\n        nickname: \"Bot\"\n      });\n      addPoints(socket.id);\n    } else {\n      broadcast(_events[\"default\"].newMsg, {\n        message: message,\n        nickname: socket.nickname\n      });\n    }\n  });\n  socket.on(_events[\"default\"].beginPath, function (_ref3) {\n    var x = _ref3.x,\n        y = _ref3.y;\n    return broadcast(_events[\"default\"].beganPath, {\n      x: x,\n      y: y\n    });\n  });\n  socket.on(_events[\"default\"].strokePath, function (_ref4) {\n    var x = _ref4.x,\n        y = _ref4.y,\n        color = _ref4.color;\n    broadcast(_events[\"default\"].strokedPath, {\n      x: x,\n      y: y,\n      color: color\n    });\n  });\n  socket.on(_events[\"default\"].fill, function (_ref5) {\n    var color = _ref5.color;\n    broadcast(_events[\"default\"].filled, {\n      color: color\n    });\n  });\n};\n\nvar _default = socketController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "socketController.js"
      ],
      "names": [
        "sockets",
        "inProgress",
        "word",
        "leader",
        "chooseLeader",
        "Math",
        "floor",
        "random",
        "length",
        "socketController",
        "socket",
        "io",
        "broadcast",
        "event",
        "data",
        "emit",
        "superBroadcast",
        "sendPlayerUpdate",
        "events",
        "playerUpdate",
        "startGame",
        "gameStarting",
        "setTimeout",
        "gameStarted",
        "to",
        "id",
        "leaderNotif",
        "endGame",
        "gameEnded",
        "addPoints",
        "map",
        "points",
        "on",
        "setNickname",
        "nickname",
        "push",
        "newUser",
        "disconnect",
        "filter",
        "aSocket",
        "disconnected",
        "sendMsg",
        "message",
        "newMsg",
        "beginPath",
        "x",
        "y",
        "beganPath",
        "strokePath",
        "color",
        "strokedPath",
        "fill",
        "filled"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AACA,IAAIA,OAAO,GAAG,EAAd;AACA,IAAIC,UAAU,GAAG,KAAjB;AACA,IAAIC,IAAI,GAAG,IAAX;AACA,IAAIC,MAAM,GAAG,IAAb;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAMJ,OAAO,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,OAAO,CAACQ,MAAnC,CAAD,CAAb;AAAA,CAArB;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAASC,EAAT,EAAgB;AACvC,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,IAAR;AAAA,WAAiBJ,MAAM,CAACE,SAAP,CAAiBG,IAAjB,CAAsBF,KAAtB,EAA6BC,IAA7B,CAAjB;AAAA,GAAlB;;AACA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACH,KAAD,EAAQC,IAAR;AAAA,WAAiBH,EAAE,CAACI,IAAH,CAAQF,KAAR,EAAeC,IAAf,CAAjB;AAAA,GAAvB;;AACA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WACvBD,cAAc,CAACE,mBAAOC,YAAR,EAAsB;AAAEnB,MAAAA,OAAO,EAAPA;AAAF,KAAtB,CADS;AAAA,GAAzB;;AAEA,MAAMoB,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAInB,UAAU,KAAK,KAAnB,EAA0B;AACxBA,MAAAA,UAAU,GAAG,IAAb;AACAE,MAAAA,MAAM,GAAGC,YAAY,EAArB;AACAF,MAAAA,IAAI,GAAG,wBAAP;AACAc,MAAAA,cAAc,CAACE,mBAAOG,YAAR,CAAd;AACAC,MAAAA,UAAU,CAAC,YAAM;AACfN,QAAAA,cAAc,CAACE,mBAAOK,WAAR,CAAd;AACAZ,QAAAA,EAAE,CAACa,EAAH,CAAMrB,MAAM,CAACsB,EAAb,EAAiBV,IAAjB,CAAsBG,mBAAOQ,WAA7B,EAA0C;AAAExB,UAAAA,IAAI,EAAJA;AAAF,SAA1C;AACD,OAHS,EAGP,IAHO,CAAV;AAID;AACF,GAXD;;AAYA,MAAMyB,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB1B,IAAAA,UAAU,GAAG,KAAb;AACAe,IAAAA,cAAc,CAACE,mBAAOU,SAAR,CAAd;AACD,GAHD;;AAIA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAJ,EAAE,EAAI;AACtBzB,IAAAA,OAAO,GAAGA,OAAO,CAAC8B,GAAR,CAAY,UAAApB,MAAM,EAAI;AAC9B,UAAIA,MAAM,CAACe,EAAP,KAAcA,EAAlB,EAAsB;AACpBf,QAAAA,MAAM,CAACqB,MAAP,IAAiB,EAAjB;AACD;;AACD,aAAOrB,MAAP;AACD,KALS,CAAV;AAMAO,IAAAA,gBAAgB;AAChBU,IAAAA,OAAO;AACR,GATD;;AAWAjB,EAAAA,MAAM,CAACsB,EAAP,CAAUd,mBAAOe,WAAjB,EAA8B,gBAAkB;AAAA,QAAfC,QAAe,QAAfA,QAAe;AAC9CxB,IAAAA,MAAM,CAACwB,QAAP,GAAkBA,QAAlB;AACAlC,IAAAA,OAAO,CAACmC,IAAR,CAAa;AAAEV,MAAAA,EAAE,EAAEf,MAAM,CAACe,EAAb;AAAiBM,MAAAA,MAAM,EAAE,CAAzB;AAA4BG,MAAAA,QAAQ,EAAEA;AAAtC,KAAb;AACAtB,IAAAA,SAAS,CAACM,mBAAOkB,OAAR,EAAiB;AAAEF,MAAAA,QAAQ,EAARA;AAAF,KAAjB,CAAT;AACAjB,IAAAA,gBAAgB;;AAChB,QAAIjB,OAAO,CAACQ,MAAR,KAAmB,CAAvB,EAA0B;AACxBY,MAAAA,SAAS;AACV;AACF,GARD;AASAV,EAAAA,MAAM,CAACsB,EAAP,CAAUd,mBAAOmB,UAAjB,EAA6B,YAAM;AACjCrC,IAAAA,OAAO,GAAGA,OAAO,CAACsC,MAAR,CAAe,UAAAC,OAAO;AAAA,aAAIA,OAAO,CAACd,EAAR,KAAef,MAAM,CAACe,EAA1B;AAAA,KAAtB,CAAV;;AACA,QAAIzB,OAAO,CAACQ,MAAR,KAAmB,CAAvB,EAA0B;AACxBmB,MAAAA,OAAO;AACR,KAFD,MAEO,IAAIxB,MAAJ,EAAY;AACjB,UAAIA,MAAM,CAACsB,EAAP,KAAcf,MAAM,CAACe,EAAzB,EAA6B;AAC3BE,QAAAA,OAAO;AACR;AACF;;AACDf,IAAAA,SAAS,CAACM,mBAAOsB,YAAR,EAAsB;AAAEN,MAAAA,QAAQ,EAAExB,MAAM,CAACwB;AAAnB,KAAtB,CAAT;AACAjB,IAAAA,gBAAgB;AACjB,GAXD;AAaAP,EAAAA,MAAM,CAACsB,EAAP,CAAUd,mBAAOuB,OAAjB,EAA0B,iBAAiB;AAAA,QAAdC,OAAc,SAAdA,OAAc;;AACzC,QAAIA,OAAO,KAAKxC,IAAhB,EAAsB;AACpBc,MAAAA,cAAc,CAACE,mBAAOyB,MAAR,EAAgB;AAC5BD,QAAAA,OAAO,sBAAehC,MAAM,CAACwB,QAAtB,yBAA6ChC,IAA7C,CADqB;AAE5BgC,QAAAA,QAAQ,EAAE;AAFkB,OAAhB,CAAd;AAIAL,MAAAA,SAAS,CAACnB,MAAM,CAACe,EAAR,CAAT;AACD,KAND,MAMO;AACLb,MAAAA,SAAS,CAACM,mBAAOyB,MAAR,EAAgB;AAAED,QAAAA,OAAO,EAAPA,OAAF;AAAWR,QAAAA,QAAQ,EAAExB,MAAM,CAACwB;AAA5B,OAAhB,CAAT;AACD;AACF,GAVD;AAYAxB,EAAAA,MAAM,CAACsB,EAAP,CAAUd,mBAAO0B,SAAjB,EAA4B;AAAA,QAAGC,CAAH,SAAGA,CAAH;AAAA,QAAMC,CAAN,SAAMA,CAAN;AAAA,WAC1BlC,SAAS,CAACM,mBAAO6B,SAAR,EAAmB;AAAEF,MAAAA,CAAC,EAADA,CAAF;AAAKC,MAAAA,CAAC,EAADA;AAAL,KAAnB,CADiB;AAAA,GAA5B;AAGApC,EAAAA,MAAM,CAACsB,EAAP,CAAUd,mBAAO8B,UAAjB,EAA6B,iBAAqB;AAAA,QAAlBH,CAAkB,SAAlBA,CAAkB;AAAA,QAAfC,CAAe,SAAfA,CAAe;AAAA,QAAZG,KAAY,SAAZA,KAAY;AAChDrC,IAAAA,SAAS,CAACM,mBAAOgC,WAAR,EAAqB;AAAEL,MAAAA,CAAC,EAADA,CAAF;AAAKC,MAAAA,CAAC,EAADA,CAAL;AAAQG,MAAAA,KAAK,EAALA;AAAR,KAArB,CAAT;AACD,GAFD;AAGAvC,EAAAA,MAAM,CAACsB,EAAP,CAAUd,mBAAOiC,IAAjB,EAAuB,iBAAe;AAAA,QAAZF,KAAY,SAAZA,KAAY;AACpCrC,IAAAA,SAAS,CAACM,mBAAOkC,MAAR,EAAgB;AAAEH,MAAAA,KAAK,EAALA;AAAF,KAAhB,CAAT;AACD,GAFD;AAGD,CA3ED;;eA4EexC,gB",
      "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src",
      "sourcesContent": [
        "import events from \"./events\";\r\nimport { chooseWord } from \"./words\";\r\nlet sockets = [];\r\nlet inProgress = false;\r\nlet word = null;\r\nlet leader = null;\r\nconst chooseLeader = () => sockets[Math.floor(Math.random() * sockets.length)];\r\nconst socketController = (socket, io) => {\r\n  const broadcast = (event, data) => socket.broadcast.emit(event, data);\r\n  const superBroadcast = (event, data) => io.emit(event, data);\r\n  const sendPlayerUpdate = () =>\r\n    superBroadcast(events.playerUpdate, { sockets });\r\n  const startGame = () => {\r\n    if (inProgress === false) {\r\n      inProgress = true;\r\n      leader = chooseLeader();\r\n      word = chooseWord();\r\n      superBroadcast(events.gameStarting);\r\n      setTimeout(() => {\r\n        superBroadcast(events.gameStarted);\r\n        io.to(leader.id).emit(events.leaderNotif, { word });\r\n      }, 5000);\r\n    }\r\n  };\r\n  const endGame = () => {\r\n    inProgress = false;\r\n    superBroadcast(events.gameEnded);\r\n  };\r\n  const addPoints = id => {\r\n    sockets = sockets.map(socket => {\r\n      if (socket.id === id) {\r\n        socket.points += 10;\r\n      }\r\n      return socket;\r\n    });\r\n    sendPlayerUpdate();\r\n    endGame();\r\n  };\r\n\r\n  socket.on(events.setNickname, ({ nickname }) => {\r\n    socket.nickname = nickname;\r\n    sockets.push({ id: socket.id, points: 0, nickname: nickname });\r\n    broadcast(events.newUser, { nickname });\r\n    sendPlayerUpdate();\r\n    if (sockets.length === 2) {\r\n      startGame();\r\n    }\r\n  });\r\n  socket.on(events.disconnect, () => {\r\n    sockets = sockets.filter(aSocket => aSocket.id !== socket.id);\r\n    if (sockets.length === 1) {\r\n      endGame();\r\n    } else if (leader) {\r\n      if (leader.id === socket.id) {\r\n        endGame();\r\n      }\r\n    }\r\n    broadcast(events.disconnected, { nickname: socket.nickname });\r\n    sendPlayerUpdate();\r\n  });\r\n\r\n  socket.on(events.sendMsg, ({ message }) => {\r\n    if (message === word) {\r\n      superBroadcast(events.newMsg, {\r\n        message: `Winner is ${socket.nickname}, word was: ${word}`,\r\n        nickname: \"Bot\"\r\n      });\r\n      addPoints(socket.id);\r\n    } else {\r\n      broadcast(events.newMsg, { message, nickname: socket.nickname });\r\n    }\r\n  });\r\n\r\n  socket.on(events.beginPath, ({ x, y }) =>\r\n    broadcast(events.beganPath, { x, y })\r\n  );\r\n  socket.on(events.strokePath, ({ x, y, color }) => {\r\n    broadcast(events.strokedPath, { x, y, color });\r\n  });\r\n  socket.on(events.fill, ({ color }) => {\r\n    broadcast(events.filled, { color });\r\n  });\r\n};\r\nexport default socketController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583141502996
  },
  "{\"sourceRoot\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\",\"filename\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\\\\src\\\\events.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind",
      "filename": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src\\events.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src\\events.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src\\events.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src",
        "sourceFileName": "events.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar events = {\n  setNickname: \"setNickname\",\n  newUser: \"newUser\",\n  disconnect: \"disconnect\",\n  disconnected: \"disconnected\",\n  sendMsg: \"sendMsg\",\n  newMsg: \"newMsg\",\n  beginPath: \"beginPath\",\n  strokePath: \"strokePath\",\n  beganPath: \"beganPath\",\n  strokedPath: \"strokedPath\",\n  fill: \"fill\",\n  filled: \"filled\",\n  playerUpdate: \"playerUpdate\",\n  gameStarted: \"gameStarted\",\n  leaderNotif: \"leaderNotif\",\n  gameEnded: \"gameEnded\",\n  gameStarting: \"gameStarting\"\n};\nvar _default = events;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50cy5qcyJdLCJuYW1lcyI6WyJldmVudHMiLCJzZXROaWNrbmFtZSIsIm5ld1VzZXIiLCJkaXNjb25uZWN0IiwiZGlzY29ubmVjdGVkIiwic2VuZE1zZyIsIm5ld01zZyIsImJlZ2luUGF0aCIsInN0cm9rZVBhdGgiLCJiZWdhblBhdGgiLCJzdHJva2VkUGF0aCIsImZpbGwiLCJmaWxsZWQiLCJwbGF5ZXJVcGRhdGUiLCJnYW1lU3RhcnRlZCIsImxlYWRlck5vdGlmIiwiZ2FtZUVuZGVkIiwiZ2FtZVN0YXJ0aW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxNQUFNLEdBQUc7QUFDYkMsRUFBQUEsV0FBVyxFQUFFLGFBREE7QUFFYkMsRUFBQUEsT0FBTyxFQUFFLFNBRkk7QUFHYkMsRUFBQUEsVUFBVSxFQUFFLFlBSEM7QUFJYkMsRUFBQUEsWUFBWSxFQUFFLGNBSkQ7QUFLYkMsRUFBQUEsT0FBTyxFQUFFLFNBTEk7QUFNYkMsRUFBQUEsTUFBTSxFQUFFLFFBTks7QUFPYkMsRUFBQUEsU0FBUyxFQUFFLFdBUEU7QUFRYkMsRUFBQUEsVUFBVSxFQUFFLFlBUkM7QUFTYkMsRUFBQUEsU0FBUyxFQUFFLFdBVEU7QUFVYkMsRUFBQUEsV0FBVyxFQUFFLGFBVkE7QUFXYkMsRUFBQUEsSUFBSSxFQUFFLE1BWE87QUFZYkMsRUFBQUEsTUFBTSxFQUFFLFFBWks7QUFhYkMsRUFBQUEsWUFBWSxFQUFFLGNBYkQ7QUFjYkMsRUFBQUEsV0FBVyxFQUFFLGFBZEE7QUFlYkMsRUFBQUEsV0FBVyxFQUFFLGFBZkE7QUFnQmJDLEVBQUFBLFNBQVMsRUFBRSxXQWhCRTtBQWlCYkMsRUFBQUEsWUFBWSxFQUFFO0FBakJELENBQWY7ZUFvQmVqQixNIiwic291cmNlUm9vdCI6IkM6XFxDb2RpbmdfTGVjdHVyZVxcTm9tYWRDb2RlclxcTm9kZUpTX0NhdGNoTWluZFxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXZlbnRzID0ge1xyXG4gIHNldE5pY2tuYW1lOiBcInNldE5pY2tuYW1lXCIsXHJcbiAgbmV3VXNlcjogXCJuZXdVc2VyXCIsXHJcbiAgZGlzY29ubmVjdDogXCJkaXNjb25uZWN0XCIsXHJcbiAgZGlzY29ubmVjdGVkOiBcImRpc2Nvbm5lY3RlZFwiLFxyXG4gIHNlbmRNc2c6IFwic2VuZE1zZ1wiLFxyXG4gIG5ld01zZzogXCJuZXdNc2dcIixcclxuICBiZWdpblBhdGg6IFwiYmVnaW5QYXRoXCIsXHJcbiAgc3Ryb2tlUGF0aDogXCJzdHJva2VQYXRoXCIsXHJcbiAgYmVnYW5QYXRoOiBcImJlZ2FuUGF0aFwiLFxyXG4gIHN0cm9rZWRQYXRoOiBcInN0cm9rZWRQYXRoXCIsXHJcbiAgZmlsbDogXCJmaWxsXCIsXHJcbiAgZmlsbGVkOiBcImZpbGxlZFwiLFxyXG4gIHBsYXllclVwZGF0ZTogXCJwbGF5ZXJVcGRhdGVcIixcclxuICBnYW1lU3RhcnRlZDogXCJnYW1lU3RhcnRlZFwiLFxyXG4gIGxlYWRlck5vdGlmOiBcImxlYWRlck5vdGlmXCIsXHJcbiAgZ2FtZUVuZGVkOiBcImdhbWVFbmRlZFwiLFxyXG4gIGdhbWVTdGFydGluZzogXCJnYW1lU3RhcnRpbmdcIlxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZXZlbnRzO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "events.js"
      ],
      "names": [
        "events",
        "setNickname",
        "newUser",
        "disconnect",
        "disconnected",
        "sendMsg",
        "newMsg",
        "beginPath",
        "strokePath",
        "beganPath",
        "strokedPath",
        "fill",
        "filled",
        "playerUpdate",
        "gameStarted",
        "leaderNotif",
        "gameEnded",
        "gameStarting"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAE,aADA;AAEbC,EAAAA,OAAO,EAAE,SAFI;AAGbC,EAAAA,UAAU,EAAE,YAHC;AAIbC,EAAAA,YAAY,EAAE,cAJD;AAKbC,EAAAA,OAAO,EAAE,SALI;AAMbC,EAAAA,MAAM,EAAE,QANK;AAObC,EAAAA,SAAS,EAAE,WAPE;AAQbC,EAAAA,UAAU,EAAE,YARC;AASbC,EAAAA,SAAS,EAAE,WATE;AAUbC,EAAAA,WAAW,EAAE,aAVA;AAWbC,EAAAA,IAAI,EAAE,MAXO;AAYbC,EAAAA,MAAM,EAAE,QAZK;AAabC,EAAAA,YAAY,EAAE,cAbD;AAcbC,EAAAA,WAAW,EAAE,aAdA;AAebC,EAAAA,WAAW,EAAE,aAfA;AAgBbC,EAAAA,SAAS,EAAE,WAhBE;AAiBbC,EAAAA,YAAY,EAAE;AAjBD,CAAf;eAoBejB,M",
      "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src",
      "sourcesContent": [
        "const events = {\r\n  setNickname: \"setNickname\",\r\n  newUser: \"newUser\",\r\n  disconnect: \"disconnect\",\r\n  disconnected: \"disconnected\",\r\n  sendMsg: \"sendMsg\",\r\n  newMsg: \"newMsg\",\r\n  beginPath: \"beginPath\",\r\n  strokePath: \"strokePath\",\r\n  beganPath: \"beganPath\",\r\n  strokedPath: \"strokedPath\",\r\n  fill: \"fill\",\r\n  filled: \"filled\",\r\n  playerUpdate: \"playerUpdate\",\r\n  gameStarted: \"gameStarted\",\r\n  leaderNotif: \"leaderNotif\",\r\n  gameEnded: \"gameEnded\",\r\n  gameStarting: \"gameStarting\"\r\n};\r\n\r\nexport default events;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583141447864
  },
  "{\"sourceRoot\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\",\"filename\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\\\\src\\\\words.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Coding_Lecture\\\\NomadCoder\\\\NodeJS_CatchMind\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind",
      "filename": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src\\words.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src\\words.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src\\words.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src",
        "sourceFileName": "words.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chooseWord = void 0;\nvar words = [\"apple\", \"arm\", \"banana\", \"bike\", \"bird\", \"book\", \"chin\", \"clam\", \"class\", \"clover\", \"club\", \"corn\", \"crayon\", \"crow\", \"crown\", \"crowd\", \"crib\", \"desk\", \"dime\", \"dirt\", \"dress\", \"fang \", \"field\", \"flag\", \"flower\", \"fog\", \"game\", \"heat\", \"hill\", \"home\", \"horn\", \"hose\", \"joke\", \"juice\", \"kite\", \"lake\", \"maid\", \"mask\", \"mice\", \"milk\", \"mint\", \"meal\", \"meat\", \"moon\", \"mother\", \"morning\", \"name\", \"nest\", \"nose\", \"pear\", \"pen\", \"pencil\", \"plant\", \"rain\", \"river\", \"road\", \"rock\", \"room\", \"rose\", \"seed\", \"shape\", \"shoe\", \"shop\", \"show\", \"sink\", \"snail\", \"snake\", \"snow\", \"soda\", \"sofa\", \"star\", \"step\", \"stew\", \"stove\", \"straw\", \"string\", \"summer\", \"swing\", \"table\", \"tank\", \"team\", \"tent\", \"test\", \"toes\", \"tree\", \"vest\", \"water\", \"wing\", \"winter\", \"woman\", \"women\"];\n\nvar chooseWord = function chooseWord() {\n  return words[Math.floor(Math.random() * words.length)];\n};\n\nexports.chooseWord = chooseWord;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndvcmRzLmpzIl0sIm5hbWVzIjpbIndvcmRzIiwiY2hvb3NlV29yZCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImxlbmd0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsS0FBSyxHQUFHLENBQ1osT0FEWSxFQUVaLEtBRlksRUFHWixRQUhZLEVBSVosTUFKWSxFQUtaLE1BTFksRUFNWixNQU5ZLEVBT1osTUFQWSxFQVFaLE1BUlksRUFTWixPQVRZLEVBVVosUUFWWSxFQVdaLE1BWFksRUFZWixNQVpZLEVBYVosUUFiWSxFQWNaLE1BZFksRUFlWixPQWZZLEVBZ0JaLE9BaEJZLEVBaUJaLE1BakJZLEVBa0JaLE1BbEJZLEVBbUJaLE1BbkJZLEVBb0JaLE1BcEJZLEVBcUJaLE9BckJZLEVBc0JaLE9BdEJZLEVBdUJaLE9BdkJZLEVBd0JaLE1BeEJZLEVBeUJaLFFBekJZLEVBMEJaLEtBMUJZLEVBMkJaLE1BM0JZLEVBNEJaLE1BNUJZLEVBNkJaLE1BN0JZLEVBOEJaLE1BOUJZLEVBK0JaLE1BL0JZLEVBZ0NaLE1BaENZLEVBaUNaLE1BakNZLEVBa0NaLE9BbENZLEVBbUNaLE1BbkNZLEVBb0NaLE1BcENZLEVBcUNaLE1BckNZLEVBc0NaLE1BdENZLEVBdUNaLE1BdkNZLEVBd0NaLE1BeENZLEVBeUNaLE1BekNZLEVBMENaLE1BMUNZLEVBMkNaLE1BM0NZLEVBNENaLE1BNUNZLEVBNkNaLFFBN0NZLEVBOENaLFNBOUNZLEVBK0NaLE1BL0NZLEVBZ0RaLE1BaERZLEVBaURaLE1BakRZLEVBa0RaLE1BbERZLEVBbURaLEtBbkRZLEVBb0RaLFFBcERZLEVBcURaLE9BckRZLEVBc0RaLE1BdERZLEVBdURaLE9BdkRZLEVBd0RaLE1BeERZLEVBeURaLE1BekRZLEVBMERaLE1BMURZLEVBMkRaLE1BM0RZLEVBNERaLE1BNURZLEVBNkRaLE9BN0RZLEVBOERaLE1BOURZLEVBK0RaLE1BL0RZLEVBZ0VaLE1BaEVZLEVBaUVaLE1BakVZLEVBa0VaLE9BbEVZLEVBbUVaLE9BbkVZLEVBb0VaLE1BcEVZLEVBcUVaLE1BckVZLEVBc0VaLE1BdEVZLEVBdUVaLE1BdkVZLEVBd0VaLE1BeEVZLEVBeUVaLE1BekVZLEVBMEVaLE9BMUVZLEVBMkVaLE9BM0VZLEVBNEVaLFFBNUVZLEVBNkVaLFFBN0VZLEVBOEVaLE9BOUVZLEVBK0VaLE9BL0VZLEVBZ0ZaLE1BaEZZLEVBaUZaLE1BakZZLEVBa0ZaLE1BbEZZLEVBbUZaLE1BbkZZLEVBb0ZaLE1BcEZZLEVBcUZaLE1BckZZLEVBc0ZaLE1BdEZZLEVBdUZaLE9BdkZZLEVBd0ZaLE1BeEZZLEVBeUZaLFFBekZZLEVBMEZaLE9BMUZZLEVBMkZaLE9BM0ZZLENBQWQ7O0FBOEZPLElBQU1DLFVBQVUsR0FBRyxTQUFiQSxVQUFhO0FBQUEsU0FBTUQsS0FBSyxDQUFDRSxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLEtBQWdCSixLQUFLLENBQUNLLE1BQWpDLENBQUQsQ0FBWDtBQUFBLENBQW5CIiwic291cmNlUm9vdCI6IkM6XFxDb2RpbmdfTGVjdHVyZVxcTm9tYWRDb2RlclxcTm9kZUpTX0NhdGNoTWluZFxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgd29yZHMgPSBbXHJcbiAgXCJhcHBsZVwiLFxyXG4gIFwiYXJtXCIsXHJcbiAgXCJiYW5hbmFcIixcclxuICBcImJpa2VcIixcclxuICBcImJpcmRcIixcclxuICBcImJvb2tcIixcclxuICBcImNoaW5cIixcclxuICBcImNsYW1cIixcclxuICBcImNsYXNzXCIsXHJcbiAgXCJjbG92ZXJcIixcclxuICBcImNsdWJcIixcclxuICBcImNvcm5cIixcclxuICBcImNyYXlvblwiLFxyXG4gIFwiY3Jvd1wiLFxyXG4gIFwiY3Jvd25cIixcclxuICBcImNyb3dkXCIsXHJcbiAgXCJjcmliXCIsXHJcbiAgXCJkZXNrXCIsXHJcbiAgXCJkaW1lXCIsXHJcbiAgXCJkaXJ0XCIsXHJcbiAgXCJkcmVzc1wiLFxyXG4gIFwiZmFuZyBcIixcclxuICBcImZpZWxkXCIsXHJcbiAgXCJmbGFnXCIsXHJcbiAgXCJmbG93ZXJcIixcclxuICBcImZvZ1wiLFxyXG4gIFwiZ2FtZVwiLFxyXG4gIFwiaGVhdFwiLFxyXG4gIFwiaGlsbFwiLFxyXG4gIFwiaG9tZVwiLFxyXG4gIFwiaG9yblwiLFxyXG4gIFwiaG9zZVwiLFxyXG4gIFwiam9rZVwiLFxyXG4gIFwianVpY2VcIixcclxuICBcImtpdGVcIixcclxuICBcImxha2VcIixcclxuICBcIm1haWRcIixcclxuICBcIm1hc2tcIixcclxuICBcIm1pY2VcIixcclxuICBcIm1pbGtcIixcclxuICBcIm1pbnRcIixcclxuICBcIm1lYWxcIixcclxuICBcIm1lYXRcIixcclxuICBcIm1vb25cIixcclxuICBcIm1vdGhlclwiLFxyXG4gIFwibW9ybmluZ1wiLFxyXG4gIFwibmFtZVwiLFxyXG4gIFwibmVzdFwiLFxyXG4gIFwibm9zZVwiLFxyXG4gIFwicGVhclwiLFxyXG4gIFwicGVuXCIsXHJcbiAgXCJwZW5jaWxcIixcclxuICBcInBsYW50XCIsXHJcbiAgXCJyYWluXCIsXHJcbiAgXCJyaXZlclwiLFxyXG4gIFwicm9hZFwiLFxyXG4gIFwicm9ja1wiLFxyXG4gIFwicm9vbVwiLFxyXG4gIFwicm9zZVwiLFxyXG4gIFwic2VlZFwiLFxyXG4gIFwic2hhcGVcIixcclxuICBcInNob2VcIixcclxuICBcInNob3BcIixcclxuICBcInNob3dcIixcclxuICBcInNpbmtcIixcclxuICBcInNuYWlsXCIsXHJcbiAgXCJzbmFrZVwiLFxyXG4gIFwic25vd1wiLFxyXG4gIFwic29kYVwiLFxyXG4gIFwic29mYVwiLFxyXG4gIFwic3RhclwiLFxyXG4gIFwic3RlcFwiLFxyXG4gIFwic3Rld1wiLFxyXG4gIFwic3RvdmVcIixcclxuICBcInN0cmF3XCIsXHJcbiAgXCJzdHJpbmdcIixcclxuICBcInN1bW1lclwiLFxyXG4gIFwic3dpbmdcIixcclxuICBcInRhYmxlXCIsXHJcbiAgXCJ0YW5rXCIsXHJcbiAgXCJ0ZWFtXCIsXHJcbiAgXCJ0ZW50XCIsXHJcbiAgXCJ0ZXN0XCIsXHJcbiAgXCJ0b2VzXCIsXHJcbiAgXCJ0cmVlXCIsXHJcbiAgXCJ2ZXN0XCIsXHJcbiAgXCJ3YXRlclwiLFxyXG4gIFwid2luZ1wiLFxyXG4gIFwid2ludGVyXCIsXHJcbiAgXCJ3b21hblwiLFxyXG4gIFwid29tZW5cIlxyXG5dO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNob29zZVdvcmQgPSAoKSA9PiB3b3Jkc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB3b3Jkcy5sZW5ndGgpXTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "words.js"
      ],
      "names": [
        "words",
        "chooseWord",
        "Math",
        "floor",
        "random",
        "length"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,KAAK,GAAG,CACZ,OADY,EAEZ,KAFY,EAGZ,QAHY,EAIZ,MAJY,EAKZ,MALY,EAMZ,MANY,EAOZ,MAPY,EAQZ,MARY,EASZ,OATY,EAUZ,QAVY,EAWZ,MAXY,EAYZ,MAZY,EAaZ,QAbY,EAcZ,MAdY,EAeZ,OAfY,EAgBZ,OAhBY,EAiBZ,MAjBY,EAkBZ,MAlBY,EAmBZ,MAnBY,EAoBZ,MApBY,EAqBZ,OArBY,EAsBZ,OAtBY,EAuBZ,OAvBY,EAwBZ,MAxBY,EAyBZ,QAzBY,EA0BZ,KA1BY,EA2BZ,MA3BY,EA4BZ,MA5BY,EA6BZ,MA7BY,EA8BZ,MA9BY,EA+BZ,MA/BY,EAgCZ,MAhCY,EAiCZ,MAjCY,EAkCZ,OAlCY,EAmCZ,MAnCY,EAoCZ,MApCY,EAqCZ,MArCY,EAsCZ,MAtCY,EAuCZ,MAvCY,EAwCZ,MAxCY,EAyCZ,MAzCY,EA0CZ,MA1CY,EA2CZ,MA3CY,EA4CZ,MA5CY,EA6CZ,QA7CY,EA8CZ,SA9CY,EA+CZ,MA/CY,EAgDZ,MAhDY,EAiDZ,MAjDY,EAkDZ,MAlDY,EAmDZ,KAnDY,EAoDZ,QApDY,EAqDZ,OArDY,EAsDZ,MAtDY,EAuDZ,OAvDY,EAwDZ,MAxDY,EAyDZ,MAzDY,EA0DZ,MA1DY,EA2DZ,MA3DY,EA4DZ,MA5DY,EA6DZ,OA7DY,EA8DZ,MA9DY,EA+DZ,MA/DY,EAgEZ,MAhEY,EAiEZ,MAjEY,EAkEZ,OAlEY,EAmEZ,OAnEY,EAoEZ,MApEY,EAqEZ,MArEY,EAsEZ,MAtEY,EAuEZ,MAvEY,EAwEZ,MAxEY,EAyEZ,MAzEY,EA0EZ,OA1EY,EA2EZ,OA3EY,EA4EZ,QA5EY,EA6EZ,QA7EY,EA8EZ,OA9EY,EA+EZ,OA/EY,EAgFZ,MAhFY,EAiFZ,MAjFY,EAkFZ,MAlFY,EAmFZ,MAnFY,EAoFZ,MApFY,EAqFZ,MArFY,EAsFZ,MAtFY,EAuFZ,OAvFY,EAwFZ,MAxFY,EAyFZ,QAzFY,EA0FZ,OA1FY,EA2FZ,OA3FY,CAAd;;AA8FO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAMD,KAAK,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,KAAK,CAACK,MAAjC,CAAD,CAAX;AAAA,CAAnB",
      "sourceRoot": "C:\\Coding_Lecture\\NomadCoder\\NodeJS_CatchMind\\src",
      "sourcesContent": [
        "const words = [\r\n  \"apple\",\r\n  \"arm\",\r\n  \"banana\",\r\n  \"bike\",\r\n  \"bird\",\r\n  \"book\",\r\n  \"chin\",\r\n  \"clam\",\r\n  \"class\",\r\n  \"clover\",\r\n  \"club\",\r\n  \"corn\",\r\n  \"crayon\",\r\n  \"crow\",\r\n  \"crown\",\r\n  \"crowd\",\r\n  \"crib\",\r\n  \"desk\",\r\n  \"dime\",\r\n  \"dirt\",\r\n  \"dress\",\r\n  \"fang \",\r\n  \"field\",\r\n  \"flag\",\r\n  \"flower\",\r\n  \"fog\",\r\n  \"game\",\r\n  \"heat\",\r\n  \"hill\",\r\n  \"home\",\r\n  \"horn\",\r\n  \"hose\",\r\n  \"joke\",\r\n  \"juice\",\r\n  \"kite\",\r\n  \"lake\",\r\n  \"maid\",\r\n  \"mask\",\r\n  \"mice\",\r\n  \"milk\",\r\n  \"mint\",\r\n  \"meal\",\r\n  \"meat\",\r\n  \"moon\",\r\n  \"mother\",\r\n  \"morning\",\r\n  \"name\",\r\n  \"nest\",\r\n  \"nose\",\r\n  \"pear\",\r\n  \"pen\",\r\n  \"pencil\",\r\n  \"plant\",\r\n  \"rain\",\r\n  \"river\",\r\n  \"road\",\r\n  \"rock\",\r\n  \"room\",\r\n  \"rose\",\r\n  \"seed\",\r\n  \"shape\",\r\n  \"shoe\",\r\n  \"shop\",\r\n  \"show\",\r\n  \"sink\",\r\n  \"snail\",\r\n  \"snake\",\r\n  \"snow\",\r\n  \"soda\",\r\n  \"sofa\",\r\n  \"star\",\r\n  \"step\",\r\n  \"stew\",\r\n  \"stove\",\r\n  \"straw\",\r\n  \"string\",\r\n  \"summer\",\r\n  \"swing\",\r\n  \"table\",\r\n  \"tank\",\r\n  \"team\",\r\n  \"tent\",\r\n  \"test\",\r\n  \"toes\",\r\n  \"tree\",\r\n  \"vest\",\r\n  \"water\",\r\n  \"wing\",\r\n  \"winter\",\r\n  \"woman\",\r\n  \"women\"\r\n];\r\n\r\nexport const chooseWord = () => words[Math.floor(Math.random() * words.length)];\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583139951430
  }
}